import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

st.set_page_config(page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–∫–ª–∞–¥–∞", layout="wide")
st.title("üè¶ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∫–ª–∞–¥–∞")

# === –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö ===
col1, col2 = st.columns(2)

with col1:
    initial_amount = st.number_input("–ù–∞—á–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ (—Ä—É–±.)", min_value=0, value=0, step=5000)
    monthly_deposit = st.number_input("–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –≤–∫–ª–∞–¥ (—Ä—É–±.)", min_value=0, value=50000, step=5000)
    years = st.number_input("–°—Ä–æ–∫ –≤–∫–ª–∞–¥–∞ (–ª–µ—Ç)", min_value=1, max_value=50, value=3)

with col2:
    st.subheader("–ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ –ø–æ –≥–æ–¥–∞–º")
    rates = {}
    for y in range(years):
        # –£–º–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Å–Ω–∏–∂–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ –Ω–∏–∂–µ 7%
        default_rate = max(7.0, 16.0 - y * 3.0)
        rate = st.number_input(
            f"–°—Ç–∞–≤–∫–∞, –≥–æ–¥ {y + 1} (% –≥–æ–¥–æ–≤—ã—Ö)",
            min_value=0.0, max_value=100.0,
            value=float(default_rate),
            step=0.5,
            key=f"rate_{y}"
        )
        rates[y + 1] = rate / 100

    st.subheader("–ò–Ω—Ñ–ª—è—Ü–∏—è –ø–æ –≥–æ–¥–∞–º")
    inflation_enabled = st.checkbox("–£—á–∏—Ç—ã–≤–∞—Ç—å –∏–Ω—Ñ–ª—è—Ü–∏—é –ø–æ –≥–æ–¥–∞–º")
    inflations = {}
    if inflation_enabled:
        for y in range(years):
            # –ò–Ω—Ñ–ª—è—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 4%
            default_inf = 4.0
            inf = st.number_input(
                f"–ò–Ω—Ñ–ª—è—Ü–∏—è, –≥–æ–¥ {y + 1} (%)",
                min_value=0.0, max_value=100.0,
                value=float(default_inf),
                step=0.5,
                key=f"inf_{y}"
            )
            inflations[y + 1] = inf / 100
    else:
        for y in range(years):
            inflations[y + 1] = 0.0

# === –†–∞—Å—á—ë—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π ===
months_total = years * 12
balance = initial_amount
history = []

for month in range(1, months_total + 1):
    current_year = (month - 1) // 12 + 1
    annual_rate = rates.get(current_year, list(rates.values())[-1])
    monthly_rate = annual_rate / 12

    interest = balance * monthly_rate
    balance += interest
    balance += monthly_deposit

    history.append({
        "–ú–µ—Å—è—Ü": month,
        "–ì–æ–¥": current_year,
        "–°—É–º–º–∞ –¥–æ –≤–∫–ª–∞–¥–∞": balance - monthly_deposit,
        "–ù–∞—á–∏—Å–ª–µ–Ω–æ %": interest,
        "–í–∫–ª–∞–¥": monthly_deposit,
        "–ë–∞–ª–∞–Ω—Å": balance
    })

df = pd.DataFrame(history)

# === –†–∞—Å—á—ë—Ç –∏–Ω—Ñ–ª—è—Ü–∏–∏ –ø–æ –≥–æ–¥–∞–º ===
inflation_cumulative = 1.0
monthly_inflation_factors = []

for month in range(1, months_total + 1):
    current_year = (month - 1) // 12 + 1
    annual_inflation = inflations.get(current_year, list(inflations.values())[-1])
    monthly_inflation = (1 + annual_inflation) ** (1/12) - 1
    inflation_cumulative *= (1 + monthly_inflation)
    monthly_inflation_factors.append(inflation_cumulative)

df["–ò–Ω—Ñ–ª—è—Ü. –º–Ω–æ–∂–∏—Ç–µ–ª—å"] = monthly_inflation_factors
df["–†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å"] = df["–ë–∞–ª–∞–Ω—Å"] / df["–ò–Ω—Ñ–ª—è—Ü. –º–Ω–æ–∂–∏—Ç–µ–ª—å"]

# === –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç –∑–∞ –º–µ—Å—è—Ü ===
df["–†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç"] = df["–†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å"].diff()
df.loc[0, "–†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç"] = df.loc[0, "–†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å"] - (initial_amount / df.loc[0, "–ò–Ω—Ñ–ª—è—Ü. –º–Ω–æ–∂–∏—Ç–µ–ª—å"])

# === –ò—Ç–æ–≥–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ ===
total_deposited = initial_amount + monthly_deposit * months_total
final_balance = df["–ë–∞–ª–∞–Ω—Å"].iloc[-1]
final_real_balance = df["–†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å"].iloc[-1]
profit = final_balance - total_deposited
real_profit = final_real_balance - total_deposited

# –°—Ä–µ–¥–Ω–∏–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
avg_monthly_interest = df["–ù–∞—á–∏—Å–ª–µ–Ω–æ %"].mean()
avg_real_monthly_growth = df["–†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç"].mean()

# === –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ===
st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã")
col_res1, col_res2, col_res3, col_res4 = st.columns(4)
col_res1.metric("–í—Å–µ–≥–æ –≤–ª–æ–∂–µ–Ω–æ", f"{total_deposited:,.0f} ‚ÇΩ")
col_res2.metric("–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞", f"{final_balance:,.0f} ‚ÇΩ")
col_res3.metric("–î–æ—Ö–æ–¥", f"{profit:,.0f} ‚ÇΩ", delta_color="normal")
if inflation_enabled:
    col_res4.metric("–†–µ–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥", f"{real_profit:,.0f} ‚ÇΩ", delta_color="inverse")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ ‚Äî —Å—Ä–µ–¥–Ω–∏–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
st.markdown("### üí∞ –°—Ä–µ–¥–Ω–∏–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")
col_m1, col_m2 = st.columns(2)
col_m1.metric("–ù–æ–º–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è", f"{avg_monthly_interest:,.0f} ‚ÇΩ")
if inflation_enabled:
    col_m2.metric("–†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç", f"{avg_real_monthly_growth:,.0f} ‚ÇΩ")

# === –ì—Ä–∞—Ñ–∏–∫ ===
st.subheader("üìà –î–∏–Ω–∞–º–∏–∫–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π")
fig, ax = plt.subplots(figsize=(10, 5))
ax.plot(df["–ú–µ—Å—è—Ü"], df["–ë–∞–ª–∞–Ω—Å"], label="–ù–æ–º–∏–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å", color="green")
if inflation_enabled:
    ax.plot(df["–ú–µ—Å—è—Ü"], df["–†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å"], label="–†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å", color="orange")
ax.set_xlabel("–ú–µ—Å—è—Ü")
ax.set_ylabel("–°—É–º–º–∞ (‚ÇΩ)")
ax.legend()
ax.grid(True)
st.pyplot(fig)

# === –¢–∞–±–ª–∏—Ü–∞ ===
with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø–æ –º–µ—Å—è—Ü–∞–º"):
    if inflation_enabled:
        display_df = df[[
            "–ú–µ—Å—è—Ü", "–ì–æ–¥", "–í–∫–ª–∞–¥", "–ù–∞—á–∏—Å–ª–µ–Ω–æ %",
            "–ë–∞–ª–∞–Ω—Å", "–†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å", "–†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç"
        ]]
        st.dataframe(display_df.style.format({
            "–í–∫–ª–∞–¥": "{:,.0f} ‚ÇΩ",
            "–ù–∞—á–∏—Å–ª–µ–Ω–æ %": "{:,.0f} ‚ÇΩ",
            "–ë–∞–ª–∞–Ω—Å": "{:,.0f} ‚ÇΩ",
            "–†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å": "{:,.0f} ‚ÇΩ",
            "–†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç": "{:,.0f} ‚ÇΩ"
        }))
    else:
        display_df = df[["–ú–µ—Å—è—Ü", "–ì–æ–¥", "–í–∫–ª–∞–¥", "–ù–∞—á–∏—Å–ª–µ–Ω–æ %", "–ë–∞–ª–∞–Ω—Å"]]
        st.dataframe(display_df.style.format({
            "–í–∫–ª–∞–¥": "{:,.0f} ‚ÇΩ",
            "–ù–∞—á–∏—Å–ª–µ–Ω–æ %": "{:,.0f} ‚ÇΩ",
            "–ë–∞–ª–∞–Ω—Å": "{:,.0f} ‚ÇΩ"
        }))